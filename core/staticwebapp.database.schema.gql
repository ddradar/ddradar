"DB Schema of Song data (included on 'Songs' container)"
type Song @model {
  """
  ID that depend on official site.
  @example `^([01689bdiloqDIOPQ]*){32}$`
  """
  id: ID!
  name: String!
  """
  Furigana for sorting.
  @example `^([A-Z0-9 .ぁ-んー]*)$`
  """
  nameKana: String!
  """
  Index for sorting. Associated with the "Choose by Name" folder.
  @description This property is the {@link https://docs.microsoft.com/azure/cosmos-db/partitioning-overview partition key}.
  @example `0`: あ行, `1`: か行, ..., `10`: A, `11`: B, ..., `35`: Z, `36`: 数字・記号
  """
  nameIndex: Int!
  artist: String!
  "Series title depend on official site."
  series: String!
  """
  Displayed min BPM (Beet Per Minutes).
  Set to `null` if not revealed, such as "???".
  """
  minBPM: Int
  """
  Displayed max BPM (Beet Per Minutes).
  Set to `null` if not revealed, such as "???".
  """
  maxBPM: Int
  "Song's step charts"
  charts: [StepChart!]!
  "ID used by {@link http://skillattack.com/sa4/ Skill Attack}."
  skillAttackId: Int
  "Song is deleted or not"
  deleted: Boolean
}

"Song's step chart"
type StepChart {
  "`1`: SINGLE, `2`: DOUBLE"
  playStyle: Int!
  """
  `0`: BEGINNER,
  `1`: BASIC,
  `2`: DIFFICULT,
  `3`: EXPERT,
  `4`: CHALLENGE
  """
  difficulty: Int!
  "Chart level"
  level: Int!
  "Normal arrow count. (Jump = 1 count)"
  notes: Int!
  "Freeze Arrow count."
  freezeArrow: Int!
  "Shock Arrow count."
  shockArrow: Int!
  "Groove Radar STREAM"
  stream: Int!
  "Groove Radar VOLTAGE"
  voltage: Int!
  "Groove Radar AIR"
  air: Int!
  "Groove Radar FREEZE"
  freeze: Int!
  "Groove Radar CHAOS"
  chaos: Int!
}

"DB Schema of Course data (included on 'Songs' container)"
type Course @model {
  """
  ID that depend on official site.
  @example `^([01689bdiloqDIOPQ]*){32}$`
  """
  id: ID!
  name: String!
  """
  ID for sorting.
  @example `^([A-Z0-9 .ぁ-んー]*)$`
  """
  nameKana: String!
  "`-1`: NONSTOP, `-2`: Grade"
  nameIndex: Int!
  "Series title depend on official site."
  series: String!
  "Displayed min BPM (Beet Per Minutes)."
  minBPM: Int
  "Displayed max BPM (Beet Per Minutes)."
  maxBPM: Int
  "Course difficulties"
  charts: [CourseChart!]!
  "Course is deleted or not"
  deleted: Boolean
}

"Course difficulty"
type CourseChart {
  "`1`: SINGLE, `2`: DOUBLE"
  playStyle: Int!
  """
  `0`: BEGINNER,
  `1`: BASIC,
  `2`: DIFFICULT,
  `3`: EXPERT,
  `4`: CHALLENGE
  """
  difficulty: Int!
  "level (equals to highest order's level)"
  level: Int!
  "Normal arrow count. (Jump = 1 count)"
  notes: Int!
  "Freeze Arrow count."
  freezeArrow: Int!
  "Shock Arrow count."
  shockArrow: Int!
  "Course order"
  order: [CourseOrder!]!
}

"Course order"
type CourseOrder {
  "{@link Song.id}"
  songId: String!
  "{@link Song.name}"
  songName: String!
  "`1`: SINGLE, `2`: DOUBLE"
  playStyle: Int!
  """
  `0`: BEGINNER,
  `1`: BASIC,
  `2`: DIFFICULT,
  `3`: EXPERT,
  `4`: CHALLENGE
  """
  difficulty: Int!
  "Chart level"
  level: Int!
}

"DB schema of 'Users' container."
type User @model {
  """
  User ID
  @description This property is the {@link https://learn.microsoft.com/azure/cosmos-db/partitioning-overview partition key}.
  """
  id: ID!
  """
  Auto generated by {@link https://learn.microsoft.com/azure/static-web-apps/authentication-authorization Azure Authentication}.
  Not defined for DDRadar's system users, like area top.
  """
  loginId: String
  name: String!
  area: Int!
  "DDR Code"
  code: Int
  "`true` if this user info is public, otherwize `false`."
  isPublic: Boolean!
  "`true` if this user is administrator."
  isAdmin: Boolean
  "Use for external API."
  password: String
}

"DB schema of 'Scores' container"
type Score @model {
  "Auto Generated by Cosmos DB."
  id: ID
  """
  {@link UserSchema.id}
  @description This property is the {@link https://docs.microsoft.com/azure/cosmos-db/partitioning-overview partition key}.
  """
  userId: String!
  "{@link UserSchema.name}"
  userName: String!
  "`true` if this score is public, otherwize `false`."
  isPublic: Boolean!
  "{@link SongSchema.id}"
  songId: String!
  "{@link SongSchema.name}"
  songName: String!
  playStyle: Int!
  difficulty: Int!
  level: Int!
  "Highest normal score (0-1000000)"
  score: Int!
  "Highest EX SCORE"
  exScore: Int
  "Highest MAX COMBO"
  maxCombo: Int
  clearLamp: Int!
  rank: String!
  """
  Groove Radar
  @description Not defined on area top score or course score.
  """
  radar: GrooveRadar
  """
  {@link SongSchema.deleted}
  If true, this score is not counted at total.
  """
  deleted: Boolean
}

"Groove Radar"
type GrooveRadar {
  "Groove Radar STREAM"
  stream: Int!
  "Groove Radar VOLTAGE"
  voltage: Int!
  "Groove Radar AIR"
  air: Int!
  "Groove Radar FREEZE"
  freeze: Int!
  "Groove Radar CHAOS"
  chaos: Int!
}

"DB schema of 'Notification' container"
type Notification @model {
  "Auto Generated by Cosmos DB."
  id: ID
  """
  Notification sender
  @description This property is the {@link https://docs.microsoft.com/azure/cosmos-db/partitioning-overview partition key}.
  @example `"SYSTEM"`: global notification
  """
  sender: String!
  "Display on the Top page or not"
  pinned: Boolean!
  "style class (like 'info')"
  type: String!
  " {@link https://materialdesignicons.com/ Material Design Icon} name"
  icon: String!
  "Notification title"
  title: String!
  "Notification body (Markdown text)"
  body: String!
  "Created time (UNIX time)"
  timeStamp: Int!
}

"Summary of {@link Score.radar} (included in 'UserDetails' container)"
type UserGrooveRadar @model {
  "User details type"
  type: String!
  "{@link UserSchema.id}"
  userId: String!
  playStyle: Int!
  "Groove Radar STREAM"
  stream: Int!
  "Groove Radar VOLTAGE"
  voltage: Int!
  "Groove Radar AIR"
  air: Int!
  "Groove Radar FREEZE"
  freeze: Int!
  "Groove Radar CHAOS"
  chaos: Int!
}

"Summary of {@link Score.clearLamp} (included in 'UserDetails' container)"
type UserClearLamp @model {
  "User details type"
  type: String!
  "{@link UserSchema.id}"
  userId: String!
  playStyle: Int!
  level: Int!
  clearLamp: Int!
  count: Int!
}

"Summary of {@link Score.rank} (included in 'UserDetails' container)"
type UserRank @model {
  "User details type"
  type: String!
  "{@link UserSchema.id}"
  userId: String!
  playStyle: Int!
  level: Int!
  rank: String!
  count: Int!
}
