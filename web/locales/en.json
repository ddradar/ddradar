{
  "area": {
    "0": "undefined",
    "1": "Hokkaido",
    "2": "Aomori",
    "3": "Iwate",
    "4": "Miyagi",
    "5": "Akita",
    "6": "Yamagata",
    "7": "Fukushima",
    "8": "Ibaraki",
    "9": "Tochigi",
    "10": "Gunma",
    "11": "Saitama",
    "12": "Chiba",
    "13": "Tokyo",
    "14": "Kanagawa",
    "15": "Niigata",
    "16": "Toyama",
    "17": "Ishikawa",
    "18": "Gukui",
    "19": "Yamanashi",
    "20": "Nagano",
    "21": "Gifu",
    "22": "Shizuoka",
    "23": "Aichi",
    "24": "Mie",
    "25": "Shiga",
    "26": "Kyoto",
    "27": "Osaka",
    "28": "Hyogo",
    "29": "Nara",
    "30": "Wakayama",
    "31": "Tottori",
    "32": "Shimane",
    "33": "Okayama",
    "34": "Hiroshima",
    "35": "Yamaguchi",
    "36": "Tokushima",
    "37": "Kagawa",
    "38": "Ehime",
    "39": "Kochi",
    "40": "Fukuoka",
    "41": "Saga",
    "42": "Nagasaki",
    "43": "Kumamoto",
    "44": "Oita",
    "45": "Miyazaki",
    "46": "Kagoshima",
    "47": "Okinawa",
    "48": "Hong Kong",
    "49": "Korea",
    "50": "Taiwan",
    "51": "USA",
    "52": "Europe",
    "53": "Oversea",
    "106": "Canada",
    "107": "Singapore",
    "108": "Thailand",
    "109": "Australia",
    "110": "New Zealand",
    "111": "United Kingdom",
    "112": "Italy",
    "113": "Spain",
    "114": "Germany",
    "115": "France",
    "116": "Portugal",
    "117": "Indonesia",
    "118": "Philippines"
  },
  "zodI18n": {
    "errors": {
      "custom": "Invalid input",
      "invalid_arguments": "Invalid function arguments",
      "invalid_date": "Invalid date",
      "invalid_enum_value": "Invalid enum value. Expected {options} to review, received '{received}'",
      "invalid_intersection_types": "Intersection results could not be merged",
      "invalid_literal": "Invalid literal value, expected {expected}",
      "invalid_return_type": "Invalid function return type",
      "invalid_string": {
        "cuid": "Invalid {validation}",
        "datetime": "Invalid {validation}",
        "email": "Invalid {validation}",
        "endsWith": "Invalid input: must end with \"{endsWith}\"",
        "regex": "Invalid",
        "startsWith": "Invalid input: must start with \"{startsWith}\"",
        "url": "Invalid {validation}",
        "uuid": "Invalid {validation}"
      },
      "invalid_type": "Expected {expected}, received {received}",
      "invalid_type_received_undefined": "Required",
      "invalid_union": "Invalid input",
      "invalid_union_discriminator": "Invalid discriminator value. Expected {options} to review",
      "not_finite": "Number must be finite",
      "not_multiple_of": "Number must be a multiple of {multipleOf}",
      "required": "Required",
      "too_big": {
        "array": {
          "exact": "Array must contain exactly {maximum} element(s)",
          "inclusive": "Array must contain at most {maximum} element(s)",
          "not_inclusive": "Array must contain less than {maximum} element(s)"
        },
        "date": {
          "exact": "Date must be exactly {maximum}",
          "inclusive": "Date must be smaller than or equal to {maximum}",
          "not_inclusive": "Date must be smaller than {maximum}"
        },
        "number": {
          "exact": "Number must be exactly {maximum}",
          "inclusive": "Number must be less than or equal to {maximum}",
          "not_inclusive": "Number must be less than {maximum}"
        },
        "set": {
          "exact": "Invalid input",
          "inclusive": "Invalid input",
          "not_inclusive": "Invalid input"
        },
        "string": {
          "exact": "String must contain exactly {maximum} character(s)",
          "inclusive": "String must contain at most {maximum} character(s)",
          "not_inclusive": "String must contain under {maximum} character(s)"
        }
      },
      "too_small": {
        "array": {
          "exact": "Array must contain exactly {minimum} element(s)",
          "inclusive": "Array must contain at least {minimum} element(s)",
          "not_inclusive": "Array must contain more than {minimum} element(s)"
        },
        "date": {
          "exact": "Date must be exactly {minimum}",
          "inclusive": "Date must be greater than or equal to {minimum}",
          "not_inclusive": "Date must be greater than {minimum}"
        },
        "number": {
          "exact": "Number must be exactly {minimum}",
          "inclusive": "Number must be greater than or equal to {minimum}",
          "not_inclusive": "Number must be greater than {minimum}"
        },
        "set": {
          "exact": "Invalid input",
          "inclusive": "Invalid input",
          "not_inclusive": "Invalid input"
        },
        "string": {
          "exact": "String must contain exactly {minimum} character(s)",
          "inclusive": "String must contain at least {minimum} character(s)",
          "not_inclusive": "String must contain over {minimum} character(s)"
        }
      },
      "unrecognized_keys": "Unrecognized key(s) in object: {keys} to review"
    },
    "types": {
      "array": "array",
      "bigint": "bigint",
      "boolean": "boolean",
      "date": "date",
      "float": "float",
      "function": "function",
      "integer": "integer",
      "map": "map",
      "nan": "nan",
      "never": "never",
      "null": "null",
      "number": "number",
      "object": "object",
      "promise": "promise",
      "set": "set",
      "string": "string",
      "symbol": "symbol",
      "undefined": "undefined",
      "unknown": "unknown",
      "void": "void"
    },
    "validations": {
      "cuid": "cuid",
      "datetime": "datetime",
      "email": "email",
      "regex": "regex",
      "url": "url",
      "uuid": "uuid"
    }
  }
}
