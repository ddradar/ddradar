import { userSchema } from '@ddradar/core'
import { z } from 'zod'

export const dbUserSchema = userSchema.extend({
  /** To detect schema */
  type: z.literal('user').catch('user'),
  /**
   * User ID (same value as `id`)
   * @remarks This property is {@link https://learn.microsoft.com/azure/cosmos-db/partitioning-overview Partition Key}.
   */
  uid: userSchema.shape.id,
  /**
   * Auto generated by {@link https://learn.microsoft.com/azure/static-web-apps/authentication-authorization Azure Authentication}.
   */
  loginId: z.string(),
  /** `true` if this user is administrator. */
  isAdmin: z.oboolean(),
})
/**
 * DB Schema of User data (included on "UserData" container)
 * @example
 * ```json
 * {
 *   "id": "sample_user",
 *   "type": "user",
 *   "uid": "sample_user",
 *   "loginId": "xxxx-xxxx-xxxx-xxxx",
 *   "name": "Sample User",
 *   "area": 13,
 *   "code": 10000000,
 *   "isPublic": true
 * }
 * ```
 */
export type DBUserSchema = z.infer<typeof dbUserSchema>
