name: Node.js CI

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - master
    paths-ignore:
      - '**.md'

jobs:
  lint:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Use Node.js 12
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 12

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache Dependencies
        uses: actions/cache@v2.1.6
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Project Dependencies
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint
      - name: Build
        run: yarn build
        env:
          APPINSIGHTS_INSTRUMENTATIONKEY: ${{ secrets.APPINSIGHTS_INSTRUMENTATIONKEY_STAGING }}

  test:
    runs-on: ubuntu-20.04

    services:
      cosmos-db:
        image: mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator
        ports:
          - 8081:8081
          - 10251:10251
          - 10252:10252
          - 10253:10253
          - 10254:10254
          - 10255:10255
        options: '-m 3g --cpus=2'
        env:
          AZURE_COSMOS_EMULATOR_PARTITION_COUNT: 5

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Use Node.js 12
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 12

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache Dependencies
        uses: actions/cache@v2.1.6
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Project Dependencies
        run: yarn install --frozen-lockfile

      - name: Test
        run: yarn test --ci --testTimeout=20000
        env:
          COSMOS_DB_CONN: AccountEndpoint=https://localhost:8081/;AccountKey=C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw==
          NODE_TLS_REJECT_UNAUTHORIZED: 0
      - name: Report Code Coverage to codecov
        uses: codecov/codecov-action@v1.5.2

  deploy:
    if: github.event_name == 'push'
    needs: [lint, test]
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Use Node.js 12
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 12
          registry-url: 'https://npm.pkg.github.com'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache Dependencies
        uses: actions/cache@v2.1.6
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Project Dependencies
        run: yarn install --frozen-lockfile

      - name: Publish @ddradar/core to GitHub Packages
        run: |
          yarn can-npm-publish --verbose && yarn publish || echo "Does not publish"
        working-directory: core
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish @ddradar/db to GitHub Packages
        run: |
          yarn can-npm-publish --verbose && yarn publish || echo "Does not publish"
        working-directory: db
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
