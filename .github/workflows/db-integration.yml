name: Cosmos DB Integration

on:
  push:
    branches:
      - master
    paths:
      - 'db/**'
      - '**.db.test.ts'
      - '.github/workflows/db-integration.yml'
      - '!**.md'
  pull_request:
    branches:
      - master
    paths:
      - 'db/**'
      - '**.db.test.ts'
      - '.github/workflows/db-integration.yml'
      - '!**.md'

jobs:
  test:
    name: Cosmos DB Integration Test
    runs-on: ubuntu-18.04

    services:
      cosmos-db:
        image: mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator
        ports:
          - 8081:8081
          - 10250:10250
          - 10251:10251
          - 10252:10252
          - 10253:10253
          - 10254:10254
          - 10255:10255
        options: -m 3g --cpus=2.0
        env:
          AZURE_COSMOS_EMULATOR_PARTITION_COUNT: 5
          AZURE_COSMOS_EMULATOR_ENABLE_DATA_PERSISTENCE: false

    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2

      - name: Import DB Emulator Certificate
        run: |
          while ! curl -k -f https://localhost:8081/_explorer/emulator.pem > ~/emulatorcert.crt; do sleep 5; done
          sudo cp ~/emulatorcert.crt /usr/local/share/ca-certificates/
          sudo update-ca-certificates

      - name: Use Node.js 12
        uses: actions/setup-node@v3.3.0
        with:
          node-version: 12
          cache: yarn

      - name: Install Project Dependencies
        run: yarn install --frozen-lockfile

      - name: Test (only *.db.test.ts)
        run: yarn test ".+\.db\.test\.ts" --passWithNoTests --colors --testTimeout=50000
        env:
          COSMOS_DB_CONN: AccountEndpoint=https://localhost:8081/;AccountKey=C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw==
          NODE_TLS_REJECT_UNAUTHORIZED: 0
